#include<stdio.h>
int main()
{
    int num;
    printf("Enter number-");
    scanf("%d",&num);
    if(num>10)
    {
        printf("num is greater than 10");
    }
    else
    {
        printf("This num is not greater than 10");

    }
    return 0;
    
}

----------------------------------------------------------------------------------------------------------------

#include<stdio.h>
int main()
{
    int num;
    printf("Enter number");
    scanf("%d",&num);
    if (num>50)
    {
        printf("Num is greater than 50 ");
    }
    else
    {
        printf("num is smaller than 50");
    }
    return 0;
    
}

-------------------------------------------------------------------------------------------------------------

#include<stdio.h>
int main()
{
    int age;
    printf("Enter your age: ");
    scanf("%d",&age);

    if(age >= 18)
    {
        printf("You are eligible for vote");
    }
    else{
        printf("You are not eligible for vote");
    }
    return 0;

    
}

---------------------------------------------------------------------------------------------------------

#include<stdio.h>
int main()
{
    int number;
    printf("Enter a number: ");
    scanf("%d",&number);

    if(number % 2 == 0)
    {
        printf("The number is even ");
    }
    else
    {
        printf("The number is o4dd");

    }
    return 0;
    
}

------------------------------------------------------------------------------------------------------------------

#include<stdio.h>
int main()
{
    int number;
    printf("Enter a number: ");
    scanf("%d",&number);

    if(number % 5 == 0)
    {
        printf("Number is divisible by 5 ");
    }
    else
    {
        printf("Number is not divisible by 5");

    }
    return 0;
    
}

------------------------------------------------------------------------------------------------------------
#include<stdio.h>
int main()
{
    char a;
    printf("Enter a character: ");
    scanf("%c",&a);

    if(a == 'a')
    {
        printf("apple");
    }
    else
    {
        printf("Input is not valid");

    }
    return 0;
    
}

--------------------------------------------------------------------------------------------------------------

#include<stdio.h>
int main()
{
    char h;
    printf("Enter a character: ");
    scanf("%c",&h);

    if(h == 'h')
    {
        printf("house");
    }
    else
    {
        printf("Input is not valid");

    }
    return 0;
    
}

-----------------------------------------------------------------------------------------------------------------
#include<stdio.h>
int main()
{
    char a;
    printf("Enter character: ");
    scanf("%c",&a);
    
    if(a=='a'|| a == 'e' || a =='i' || a =='o' || a =='u')
    {
        printf("It is a Vowel");
    } 
    else
    {
        printf("It is a consonant");

    }
    return 0;
    
}

_______________________________________________________________________

#include<stdio.h>
int main()
{
    char a;
    printf("Enter character: ");
    scanf("%c",&a);
    
    if(a=='p'|| a == 'e' || a =='a' || a =='k')
    {
        printf("it is a Peak word");
    } 
    else
    {
        printf("input is not valid");

    }
    return 0;
    
}

----------------------------------------------------------------------------------------------------------------------

#include<stdio.h>
int main()
{
    char a;
    printf("Enter character: ");
    scanf("%c",&a);
    
    if(a =='q'|| a == 'w' || a =='e' || a =='r' || a =='t' || a =='y' || a =='u' || a =='i' || a =='o' || a =='p')
    {   
        printf("Upper line");
    } 
    else
    {
        printf("input is not valid");

    }
    return 0;
    
}

--------------------------------------------------------------------------------------------------------------------------

#include<stdio.h>
int main()
{
    int number;
    printf("Enetr a Number: ");
    scanf("%d",&number);

    if(number == 1)
    {
        printf("one");
    }
    else
    {
        printf("Input is invalid");
    }
    return 0 ;
    
}
------------------------------------------------------------------------------------------------------------------

C TOKENS => 

1. Keywords
2. Operators
3. Identifiers
4. Constants
5. Strings
6. Special Symbols


1. KEYWORDS -

- These are pre-defined words or reserved words that have some meaning 
- There are 32 keywords in C.
- Keywords are those pre-defined words that have special meaning in the compiler and they cannot be used for any other purpose.

----------------------------------------------------------------------------------------------------------------------

2. OPERATOR - 

- Operate the value of variables.
- It is used to perform some specific task.

Types_

1. Arithmetic Operator
2. Relational Operator
3. Logical Operator
4. Assignment Operator
5. Ternary Operator


1. Arithmetic Operator => It is used for mathematical terms.

SYMBOLS - 
 
+ : addition
- : subtraction
* : multiplication
/ : division
% : modular


2.Relational Operator => It is used to make conditions and work on true and false.

SYMBOLS - 

< : less than
> : greater than
<= : less than or equal to
>= : greater than or equal to
== : equal equal to
!= : not equal to


3. Logical Operator = > Used to check two or more conditions and condition will be true or false.

- AND : &&
- It always work on true condition

T && T : WORKING
T && F : NOT WORKING
F && T : NOT WORKING
F && F : NOT WORKING

- OR : ||
- It always work on one condition must be true 

T || F : WORKING
F || T : WORKING
T || T : WORKING
F || F : NOT WORKING


4. Assignment Operator => It is used to assign value

SYMBOL -

= (used to assign)
ex. int a = 89;



5. Ternary Operator = > The operator that requires three operands to act upon is called the ternary operator. 

? :  

------------------------------------------------------------------------------------------------------------------


IDENTIFIERS => 

- Identifiers are the names assigned to different entities such as variables, functions, arrays, etc
- Identifiers are the building blocks of a program.
- These are user defined names 
- Identifier names must differ in spelling and case from any keywords 
- You cannot use keywords as identifiers

-----------------------------------------------------------------------------------------------------------------

CONSTANTS =>

- The constants refer to the variables with fixed values
- They are like normal variables but with the difference that their values can not be modified in program once they are defined.
- Constants may belong to any of the data types

-----------------------------------------------------------------------------------------------------------------------

STRINGS =>
 
-  Strings are nothing but an array of characters ended with a null character (‘\0’).
-  This null character indicates the end of the string. 
- Strings are always enclosed in double quotes.

----------------------------------------------------------------------------------------------------------------------

SPECIAL SYMBOLS => 

Brackets [] =>  This indicates single and multidimensional subscripts.

Parentheses () => This used to call function calls and function parameters

Braces{} => Used to signify the start and end of a series of statements.

Comma (,) => It is used to separate more than one statement.

Colon (:) => It is an operator that essentially invokes something.

Semicolon(;) => It is known as statement terminator.

Asterisk(*) => It is used to create pointer variable and for thr multiplication of variables.

Assignment operator(=) => It is used to assign values.

Pre-Processor (#) => Pre processor directive 


---------------------------------------------------------------------------------------------------------------------------














